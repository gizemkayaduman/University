// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityDb.Data;

#nullable disable

namespace University.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241230190126_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("University.Models.Course", b =>
                {
                    b.Property<int>("CNUM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CDEPT")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CDESC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CNAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CREDIT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentDEPTCODE")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LEVEL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CNUM");

                    b.HasIndex("DepartmentDEPTCODE");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("University.Models.Department", b =>
                {
                    b.Property<int>("DEPTCODE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DEPTCOLLEGE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DEPTNAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DEPTOFFICE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DEPTPHONE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DEPTCODE");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("University.Models.Grades", b =>
                {
                    b.Property<int>("SECCOURSE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SECNUM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SEMESTER")
                        .HasColumnType("TEXT");

                    b.Property<int>("YEAR")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SNUM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GRADE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SectionSECCOURSE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SectionSECNUM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentSNUM")
                        .HasColumnType("INTEGER");

                    b.HasKey("SECCOURSE", "SECNUM", "SEMESTER", "YEAR", "SNUM");

                    b.HasIndex("StudentSNUM");

                    b.HasIndex("SectionSECCOURSE", "SectionSECNUM");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("University.Models.Section", b =>
                {
                    b.Property<int>("SECCOURSE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SECNUM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseCNUM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("INSTRUCTORNAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SEMESTER")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YEAR")
                        .HasColumnType("INTEGER");

                    b.HasKey("SECCOURSE", "SECNUM");

                    b.HasIndex("CourseCNUM");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("University.Models.Student", b =>
                {
                    b.Property<int>("SNUM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("CLASS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MAJOR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MINOR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PROG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SCADDR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SCPHONE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SEX")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SPADDR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SPPHONE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SSSN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("SNUM");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("University.Models.Course", b =>
                {
                    b.HasOne("University.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentDEPTCODE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("University.Models.Grades", b =>
                {
                    b.HasOne("University.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentSNUM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionSECCOURSE", "SectionSECNUM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("University.Models.Section", b =>
                {
                    b.HasOne("University.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseCNUM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("University.Models.Department", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
